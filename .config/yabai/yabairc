# the scripting addition must be loaded manually if
# yabai is running on Big Sur
sudo yabai --load-sa
yabai -m signal \
  --add event=dock_did_restart \
  action="sudo yabai --load-sa"

# get color values from pywal
# source $HOME/.cache/wal/colors-yabai-argb.sh
source /Users/seanoneil/.cache/wal/colors-yabai.sh
transparent=0xFF

# global settings
yabai -m config debug_output                 on
yabai -m config mouse_follows_focus          on
yabai -m config focus_follows_mouse          autofocus
yabai -m config window_placement             second_child
yabai -m config window_topmost               on
yabai -m config split_ratio                  0.5
yabai -m config auto_balance                 on
yabai -m config mouse_modifier               ctrl
yabai -m config mouse_action1                move
yabai -m config mouse_action2                resize
yabai -m config mouse_drop_action            stack

# general space settings
yabai -m config layout                       bsp
yabai -m config top_padding                  0
yabai -m config bottom_padding               0
yabai -m config left_padding                 0
yabai -m config right_padding                0
yabai -m config window_gap                   0

# window opacity
yabai -m config window_opacity on
yabai -m config active_window_opacity 1.0
yabai -m config normal_window_opacity $alpha

# border
yabai -m config window_border               on
yabai -m config window_border_width         1
yabai -m config active_window_border_color  $color2
yabai -m config normal_window_border_color  $transparent
yabai -m config insert_feedback_color       $foreground

# application rules

yabai -m rule --add app="^System Preferences$" manage=off
yabai -m rule --add app="^Firefox Developer Edition$" opacity=1.0
yabai -m rule --add app="^Chrome$" opacity=1.0
yabai -m rule --add app="^Slack$" opacity=1.0
yabai -m rule --add app="^Zoom$" opacity=1.0
yabai -m rule --add app="^Pritunl$" manage=off

yabai -m rule --add title="^Preferences$" manage=off

# jetbrains_apps="^(IntelliJ IDEA|Android Studio)$"

# float all JetBrains apps
# yabai -m rule --add app="${jetbrains_apps}" manage=off

# yabai -m signal --add event=window_created app="${jetbrains_apps}" action="${XDG_CONFIG_HOME}/yabai/bin/float_window_when_only_window"


# automatically focus the window below the cursor after a window/application is closed.
focus_below_cursor="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"
events=(window_destroyed application_terminated)

for event in "${events[@]}"; do
  yabai -m signal --add \
    event="${event}" \
    action="${focus_below_cursor}"
done

# focus window after active space changes
yabai -m signal --add event=space_changed action="yabai -m window --focus \$(yabai -m query --windows --space | jq .[0].id)"

# focus window after active display changes
yabai -m signal --add event=display_changed action="yabai -m window --focus \$(yabai -m query --windows --space | jq .[0].id)"


# vim: set ft=bash :
